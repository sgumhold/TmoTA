#version 330
#extension GL_EXT_geometry_shader4 : enable

layout(points) in;
layout(triangle_strip, max_vertices = 4) out;

uniform bool allow_subpixel_precision = false;
uniform int width;
uniform int height;
uniform int fst_pixel_idx;
uniform float aspect;

//***** begin interface of view.glsl ***********************************
mat4 get_modelview_projection_matrix();
//***** end interface of view.glsl ***********************************

in vec4 position_gs[];
in vec4 color_gs[];

out vec4 color_fs;
out vec2 texcoord_fs;
out vec4 position_fs;

void emit_vertex(in vec2 p)
{
	texcoord_fs = vec2(
		(p.x - float(fst_pixel_idx)) / width,
		(p.y - float(fst_pixel_idx)) / height);
	vec3 position = vec3( (2.0f * texcoord_fs.x - 1.0f) * aspect, 1.0f - 2.0f * texcoord_fs.y, 0.0f);
	gl_Position = get_modelview_projection_matrix()*vec4(position, 1.0);
	EmitVertex();
}

void main()
{
	color_fs = color_gs[0];
	position_fs = position_gs[0];
    if (!allow_subpixel_precision) {
		position_fs = floor(position_fs);
		position_fs.zw += vec2(1.0);
	}
	emit_vertex(position_fs.zy);
	emit_vertex(position_fs.xy);
	emit_vertex(position_fs.zw);
	emit_vertex(position_fs.xw);
}
